@baseUrl = http://127.0.0.1:3000
@authToken = {{authenticate.response.body.accessToken}}
@refreshToken = {{authenticate.response.body.refreshToken}}
@userId = {{createUser.response.body.id}}
@messageId = {{createMessage.response.body.id}}

# MESSAGES
### Lista todos os messages
GET {{baseUrl}}/messages/
?limit=10
&offset=0

### Lista apenas um message
GET {{baseUrl}}/messages/{{messageId}}

### Cria um message
# @name createMessage
POST {{baseUrl}}/messages/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "text": "Este texto deve chegar no e-mail. \nAqui vem na próxima linha.",
    "toId": "{{userId}}"
}

### Atualiza um message
PATCH {{baseUrl}}/messages/{{messageId}}
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "text": "De RODRIGO para Joana",
    "isRead": true
}
### Apaga um message
DELETE {{baseUrl}}/messages/{{messageId}}
Authorization: Bearer {{authToken}}


#



# Users
### Lista todas as users
GET {{baseUrl}}/users/
?limit=10
&offset=0
Authorization: Bearer {{authToken}}

### Lista apenas uma pessoa
GET {{baseUrl}}/users/{{userId}}
Authorization: Bearer {{authToken}}

### Cria uma pessoa
# @name createUser
POST {{baseUrl}}/users/
Content-Type: application/json

{
    "email": "admin@email.com",
    "password": "123456",
    "name": "Rodrigo"
}

### Atualiza uma pessoa
PATCH {{baseUrl}}/users/{{userId}}
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "name": "JOÃO"
}

### Apaga uma pessoa
DELETE {{baseUrl}}/users/{{userId}}
Authorization: Bearer {{authToken}}



#



# AUTH
### Autenticação
# @name authenticate
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
    "email": "admin@email.com",
    "password": "123456"
}

### Re-Autenticação
# @name reAuthenticate
POST {{baseUrl}}/auth/refresh/
Content-Type: application/json

{
    "refreshToken": "{{refreshToken}}"
}



#



# Upload
### Foto da pessoa
POST {{baseUrl}}/users/upload-picture/
# @name upload
Authorization: Bearer {{authToken}}
Content-Type: multipart/form-data; boundary=----BoundaryDelimitadorHttp

------BoundaryDelimitadorHttp
Content-Disposition: form-data; name="file"; filename="cat.png"
Content-Type: image/png

< ../dev/images/cat.png
------BoundaryDelimitadorHttp--

### Ver foto
GET {{baseUrl}}/pictures/5734838b-1d72-44d3-b5b7-b9499ba2ecf6.png
